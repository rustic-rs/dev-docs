@startuml evaluation

component "rustic" {

    component "rustic_rs" {
        [CliCommands] --> [CliConfig]
    }

    [RUSTIC_APP] -> [rustic_rs]
}

component "rustic_core" {
    port CoreAPI
    portOut BackendPort
    portOut CryptoPort
    portOut ConfigPort
    portOut AlgorithmPort

    [Repository]
    [ProgressBar]
    [Filtering]
    [Commands]

    CoreAPI --> Commands
    CoreAPI --> Repository
    CoreAPI --> ProgressBar

    Repository --> BackendPort
    Repository --> CryptoPort
    Repository --> ConfigPort
    Repository --> AlgorithmPort
}

component "rustic_algorithm" {
    portIn AlgorithmAdapter
    [Archiver]
    [Blob]
    [Chunker]
    [Index]
    [Id]
    [Repofile]

    AlgorithmAdapter --> Archiver
    AlgorithmAdapter --> Blob
    AlgorithmAdapter --> Chunker
    AlgorithmAdapter --> Index
    AlgorithmAdapter --> Id
    AlgorithmAdapter --> Repofile
}

component "rustic_crypto" {
    portIn CryptoAdapter
    [CDC]
    [Crypto]

    CryptoAdapter --> CDC
    CryptoAdapter --> Crypto
}

component "rustic_backend" {
    portIn BackendAdapter
    portOut BackendFilesystemPort
    portOut ObjectStoragePort
    portOut RestPort

    [local]
    [opendal]
    [rclone]
    [rest]
    [s3]

    BackendAdapter --> local
    BackendAdapter --> opendal
    BackendAdapter --> rclone
    BackendAdapter --> rest
    BackendAdapter --> s3

    local --> BackendFilesystemPort
    opendal --> ObjectStoragePort
    opendal --> RestPort
    s3 --> ObjectStoragePort
    rclone --> RestPort
    rest --> RestPort
}

component "rustic_config" {
    portIn ConfigAdapter
    portOut ConfigFilesystemPort
    [Config]

    ConfigAdapter --> Config
    Config --> ConfigFilesystemPort
}

note bottom of [rustic_config]
    - Config file parsing and validation
    - Config file generation
    - Config file locations
    - Config file editing
end note

[CliCommands] --> CoreAPI
BackendAdapter --> BackendPort
CryptoAdapter --> CryptoPort
ConfigAdapter --> ConfigPort
AlgorithmAdapter --> AlgorithmPort

component "rustic_server" {
    [Controller]
}

rustic_server --> CoreAPI

component "rustic_scheduler" {
    [Scheduler]
}

rustic_scheduler --> CoreAPI

@enduml


@startmindmap cli_commands
* CLI
' Basic commands
** backup
** check
** init (links to config->generate internally)
** config
***_ show
***_ set-value
***_ get-value
***_ generate
** restore
** self-update
** help
' Advanced commands
** completions
** snapshots
*** new (links to backup internally)
*** copy
*** forget
*** diff
*** contents (ls)
*** dump
*** merge
*** repair
*** tag
** repository
*** raw-data (cat)
*** list
*** info
*** new (init)
*** prune
*** keys
****_ add
****_ list
****_ remove
****_ show
@endmindmap


@startmindmap cli_commands_bkp
* CLI
' Basic commands
** backup
** check
** config
***_ show
***_ set-value
***_ get-value
***_ generate
** restore
** self-update
** help
' Advanced commands
** completions
** snapshots
*** new (links to backup internally)
*** copy
*** forget
*** diff
*** contents (ls)
*** dump
*** merge
*** tag
** init (links internally to config->generate)
** repository
*** new (links to init internally)
*** raw-data (cat)
*** list
*** info
*** keys
****_ add
****_ list
****_ remove
****_ show
** maintenance
***_ prune
***_ repair
****_ index
****_ snapshots
@endmindmap

@startmindmap cli_commands_categories

* CLI
' Top level commands
** backup (links to snapshots->new internally)
** restore (links to snapshots->restore internally)
** help

' Configuration
** init (links internally to profiles->new + repository->new)
** profiles
***_ new
***_ list
***_ show
***_ edit-value
***_ get-value

' Advanced commands
** completions

' Management

' Snapshots
** snapshots
*** new
*** contents (ls)
*** copy
*** diff
*** restore
****_ std-out
*** merge
*** forget
*** tag

' Repository
** repository
*** new
*** info
*** config
****_ show
****_ edit
*** raw (cat + list)
****_ show
****_ tree
*** keys
****_ new
****_ list
****_ remove
****_ show

' Maintenance
** maintenance
***_ check
***_ repair
****_ index
****_ snapshots
' Cleanup
***_ prune

' Optional
** self-update
@endmindmap